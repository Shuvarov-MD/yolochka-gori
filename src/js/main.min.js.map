{"version":3,"sources":["maskPhone.js"],"names":["maskPhone","selector","masked","arguments","length","undefined","mask","event","keyCode","template","def","replace","val","this","value","i","newValue","a","charAt","indexOf","slice","reg","substr","RegExp","test","type","_iterator","_createForOfIteratorHelper","document","querySelectorAll","s","_step","n","done","elem","addEventListener","err","e","f"],"mappings":"ipCAAA,SAAAA,UAAAC,GAAA,IAAAC,EAAA,EAAAC,UAAAC,aAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA,qBAGA,SAAAG,EAAAC,GACA,IAAAC,EAAAD,EAAAC,QACAC,EAAAP,EACAQ,EAAAD,EAAAE,QAAA,MAAA,IACAC,EAAAC,KAAAC,MAAAH,QAAA,MAAA,IAEAI,EAAA,EACAC,EAAAP,EAAAE,QAAA,SAAA,SAAAM,GAAA,OAAAF,EAAAH,EAAAR,OAAAQ,EAAAM,OAAAH,MAAAL,EAAAQ,OAAAH,GAAAE,KAGA,KAFAF,EAAAC,EAAAG,QAAA,QAGAH,EAAAA,EAAAI,MAAA,EAAAL,IAGAM,EAAAZ,EAAAa,OAAA,EAAAT,KAAAC,MAAAV,QAAAO,QAAA,MACA,SAAAM,GAAA,MAAA,SAAAA,EAAAb,OAAA,MAAAO,QAAA,SAAA,WACAU,EAAA,IAAAE,OAAA,IAAAF,EAAA,MAEAG,KAAAX,KAAAC,QAAAD,KAAAC,MAAAV,OAAA,GAAA,GAAAI,GAAAA,EAAA,MACAK,KAAAC,MAAAE,GAGA,SAAAT,EAAAkB,MAAAZ,KAAAC,MAAAV,OAAA,IACAS,KAAAC,MAAA,IA1BA,IAAAY,EAAAC,2BACAC,SAAAC,iBAAA5B,IADA,IA+BA,IAAAyB,EAAAI,MAAAC,EAAAL,EAAAM,KAAAC,MAAA,CAAA,IAAAC,EAAAH,EAAAjB,MACAoB,EAAAC,iBAAA,QAAA7B,GACA4B,EAAAC,iBAAA,QAAA7B,GACA4B,EAAAC,iBAAA,OAAA7B,IAlCA,MAAA8B,GAAAV,EAAAW,EAAAD,GAAA,QAAAV,EAAAY,KAuCAtC,UAAA","file":"main.min.js","sourcesContent":["function maskPhone(selector, masked = '+7 (___) ___-__-__') {\r\n  const elems = document.querySelectorAll(selector);\r\n\r\n  function mask(event) {\r\n    const keyCode = event.keyCode;\r\n    const template = masked,\r\n      def = template.replace(/\\D/g, \"\"),\r\n      val = this.value.replace(/\\D/g, \"\");\r\n\r\n    let i = 0,\r\n      newValue = template.replace(/[_\\d]/g, a => (i < val.length ? val.charAt(i++) || def.charAt(i) : a));\r\n    i = newValue.indexOf(\"_\");\r\n\r\n    if (i !== -1) {\r\n      newValue = newValue.slice(0, i);\r\n    }\r\n\r\n    let reg = template.substr(0, this.value.length).replace(/_+/g,\r\n      a => \"\\\\d{1,\" + a.length + \"}\").replace(/[+()]/g, \"\\\\$&\");\r\n    reg = new RegExp(\"^\" + reg + \"$\");\r\n\r\n    if (!reg.test(this.value) || this.value.length < 5 || keyCode > 47 && keyCode < 58) {\r\n      this.value = newValue;\r\n    }\r\n\r\n    if (event.type === \"blur\" && this.value.length < 5) {\r\n      this.value = \"\";\r\n    }\r\n\r\n  }\r\n\r\n  for (const elem of elems) {\r\n    elem.addEventListener(\"input\", mask);\r\n    elem.addEventListener(\"focus\", mask);\r\n    elem.addEventListener(\"blur\", mask);\r\n  }\r\n\r\n}\r\n\r\nmaskPhone('input[type=\"tel\"]');\r\n"]}